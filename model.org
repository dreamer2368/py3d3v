#+TITLE:  3d3v Electrostatic PIC Code
#+AUTHOR: Scott High

* Model Definition

** General description
- Approximating a 3 dimensional plasma using a finite number of
  negatively charged electrons and positively charge ions
- Particle dynamics are simulated by solving
  \[ F = q(E+v \times B) \]
  where
  \[ E = -\nabla \phi \]
  and
  \[ \nabla^2 \phi = -\frac{\rho}{\epsilon_0} \]
  - $\phi$ is approximated from the mesh charge density using second order
    centered finite differences
  - $E$ is approximated from $\phi$ using second order centered finite
    differences
- The time integrator is Leap-Frog
  - $v$ is advanced using the Boris Method
  - $x$ is advanced in the obvious way using $v$
  - See below for details
- Particle charges are interpolated to a uniform mesh to approximate
  $\rho$ using the cloud in cell (CIC) method
- The magnetic field is uniform in the $z$ direction, and is held
  constant at $B_0$.
- Particles are free to move in $x, y, z$ and have velocity components
  $v_x, v_y, v_z$

** Algorithm

1) Weight charges $q_i$ to the uniform mesh to get charge density $\rho$
   - Cloud in cell (CIC)
2) Solve $\nabla^2 \phi(t) = -\frac{\rho}{\epsilon_0}$ for $\phi(t)$
   - Using FFT
3) Solve $E(t) = -\nabla \phi(t)$ for $E_x, E_y, E_z$
4) Interpolate $E_x, E_y, E_z$ to particle positions
5) Advance $v(t-\Delta t/2) \to v(t+\Delta t/2)$ using $E(t)$
6) Advance $x(t) \to x(t+\Delta t)$ using $v(t+\Delta t/2)$

*** Time integration details

**** Boris method for advancing $v$
\begin{equation}
v_{t-\Delta t/2} = v^{-} - \frac{qE}{m} \frac{\Delta t}{2}
\end{equation}
\begin{equation}
v_{t+\Delta t/2} = v^+ + \frac{qE}{m}\frac{\Delta t}{2}
\end{equation}
\begin{equation}
\frac{v^+-v^-}{\Delta t} = \frac{q}{2m}(v^+ + v^-)\times B
\end{equation}

**** Advancing $x$
\[ x(t+\Delta t) = x(t) + v(t+\Delta t/2) \Delta t \]

* Model Validation

** Landau Oscillations
Landau oscillations are simple harmonic density waves that form in
cold plasmas in response to small perturbations in the initial charge
density (with $B_0=0$). For simplicity we create oscillations only in
the $x$ direction. To approximate the conditions in a cold plasma, the
simulation volume is filled with a large number of particles with
charge chosen such that particles in the $y$-$z$ plane approximate
sheet charges with charge density $q$.

The particle displacements are expected to follow
\[ \ddot{\delta x} = - \omega_p^2 \delta x \]
which is simple harmonic motion with period
$\omega_p=(\frac{nq^2}{m \epsilon_0})^{1/2}$.


*** Details
- Position perturbation: $x = x_0 + A \cos(k x_0)$
  - Corresponds to a $\sin$ perturbation in the initial density at the
    same mode
  - The $x_0$ values are uniformly spaced in the domain
- Expected density: $\rho(t) \propto \sin(kx)\cos(\omega t)$

*** Dispersion relations for cold plasmas
- Exact dispersion relation from the fluid equations
  \[ \omega(\bold{k}) = \bold{k} \cdot \bold{v}_0 \pm \omega_p \]
- When $\bold{v}_0 = 0$ the numerical dispersion is
  \[ \omega(k) = \omega_p \cos\left(\frac{k \Delta x}{2}\right) \]

*** Numerical Results
- Initial charge positions are equispaced in the domain
- $\omega$ vs $k$ for fixed $dx$ (with constant $L$)
  
  [[file:py3d3v/wk_fixed_dx.png]]
  - ppc = average particles per cell per dimension
    - Total average particles per cell will be ppc$^3$
- Choosing parameters
  - With ppc=2 the experimental numerical dispersion approaches the
    expected numerical dispersion $\omega(k) = \omega_p\cos(\frac{k
    dx}{2})$
    
- Measuring $\omega$

  - If the initial density is pertubed in the $k^{th}$ fourier mode,
    the density is expected to follow $\rho(k, t) \propto \cos(\omega
    t)$, which is generally complex.  Then we can use the fact that
    $\rho(k, t) \rho^*(k, t) \propto \cos^2(\omega t) =
    \frac{1}{2}(\cos(2\omega t)-1)$ is real to compute $\omega$. The
    first 10 time steps are averaged to produce the estimated
    $\omega$

- I believe that the case where ppc<1 does not yield landau
  oscillations because the density (as seen by the grid) is no
  longer approximating a fluid
  Consider the following example from my 1D2V code (they are not
  scaled correctly)
    
  [[file:py3d3v/rho0_vs_Ne.png]]
    
  [[file:py3d3v/rho0_vs_Ne_FFT.png]]
    


** Plasma Sheath
When a plasma comes into contact with a metal surface, the faster
moving electrons deposit charge faster than the slower moving
ions. This leads to a net negative charge on the surface, which is
balanced out by a net positive charge a short distance from the. The
resulting region of positive charge is called the plasma sheath.
